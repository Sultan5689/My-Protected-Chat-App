<!DOCTYPE html>
<html lang="ar" dir="rtl">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>دردشة محمية</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
    <style>
        /* إضافة خط Inter لكل العناصر */
        body {
            font-family: 'Inter', sans-serif;
            background-color: #f7f7f7;
        }

        /* تنسيق شاشة التحميل الاحترافية - تم وضعها في المنتصف */
        .loading-screen {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            background-color: #ffffff;
            color: #dc2626;
            z-index: 1000;
            transition: opacity 1s ease-in-out;
            opacity: 1;
        }
        
        .loading-screen svg {
            width: 100px;
            height: 100px;
            object-fit: cover;
            border-radius: 20px;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
        }

        /* Responsive image sizes */
        .w-full.h-auto {
            width: 100%;
            height: auto;
        }

        .loading-text-container {
            height: 2rem;
            text-align: center;
        }

        .loading-bar {
            width: 80%;
            max-width: 400px;
            height: 8px;
            background-color: rgba(220, 38, 38, 0.2);
            border-radius: 9999px;
            overflow: hidden;
            margin-top: 2rem;
        }

        .loading-progress {
            height: 100%;
            width: 0%;
            background-color: #ef4444;
            animation: load 20s forwards ease-out;
        }

        @keyframes load {
            0% { width: 0%; }
            100% { width: 100%; }
        }

        /* تأثيرات الأزرار */
        .chat-button {
            transition: all 0.2s ease-in-out;
        }
        .chat-button:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
        }
        .chat-button:active {
            transform: translateY(0);
            box-shadow: none;
        }

        /* تنسيق الألوان الحمراء */
        .bg-red-500 { background-color: #ef4444; }
        .bg-red-600 { background-color: #dc2626; }
        .text-red-500 { color: #ef4444; }
        .border-red-500 { border-color: #ef4444; }

        /* تنسيق نافذة الاسم المستعار وكلمة السر */
        .modal {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.6);
            display: flex;
            justify-content: center;
            align-items: center;
            z-index: 999;
        }

        .modal-content {
            background-color: white;
            padding: 2rem;
            border-radius: 1rem;
            width: 90%;
            max-width: 400px;
            text-align: center;
            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.2);
            animation: slide-in 0.5s ease-out;
        }

        @keyframes slide-in {
            from { transform: translateY(-50px); opacity: 0; }
            to { transform: translateY(0); opacity: 1; }
        }

        /* تنسيق عام للدردشة */
        .chat-container {
            height: 100vh;
            display: flex;
            flex-direction: column;
        }
        .messages-container {
            flex-grow: 1;
            overflow-y: auto;
            padding: 1rem;
            -webkit-overflow-scrolling: touch;
        }
        .message-bubble {
            padding: 0.75rem 1rem;
            border-radius: 1.25rem;
            margin-bottom: 0.75rem;
            max-width: 80%;
            box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
            word-wrap: break-word; /* Ensure long words break */
        }
    </style>
</head>
<body class="bg-gray-100 flex items-center justify-content-center">

    <!-- ملف صوتي للموسيقى الخلفية - يتم التحكم فيه بواسطة JavaScript -->
    <audio id="background-music" loop>
        <source src="https://www.learningcontainer.com/wp-content/uploads/2020/02/Kalimba.mp3" type="audio/mpeg">
        متصفحك لا يدعم عنصر الصوت.
    </audio>

    <!-- شاشة التحميل -->
    <div id="loadingScreen" class="loading-screen">
        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="w-24 h-24 text-red-600 rounded-lg mb-8 shadow-lg">
            <path d="M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z"></path>
        </svg>
        <h1 class="text-3xl font-bold">دردشة محمية</h1>
        <div class="loading-text-container">
            <p id="loadingText" class="mt-4 text-xl">يتم تحميل الواجهة...</p>
        </div>
        <div class="loading-bar">
            <div id="loadingProgress" class="loading-progress"></div>
        </div>
    </div>

    <!-- نافذة كلمة السر -->
    <div id="passwordModal" class="modal hidden">
        <div class="modal-content">
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="w-24 h-24 text-red-600 mx-auto mb-6 rounded-lg shadow-lg">
                <path d="M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z"></path>
            </svg>
            <h2 class="text-2xl font-bold mb-4 text-gray-800">أدخل كلمة السر</h2>
            <p class="text-gray-600 mb-6">هذا التطبيق محمي بكلمة سر.</p>
            <input type="password" id="passwordInput" placeholder="أدخل كلمة السر هنا" class="w-full p-3 border-2 border-gray-300 rounded-lg focus:outline-none focus:border-red-500 transition-colors">
            <button id="accessChatBtn" class="chat-button w-full mt-4 bg-red-500 text-white font-semibold py-3 px-6 rounded-lg hover:bg-red-600 transition-colors">
                ادخل
            </button>
        </div>
    </div>

    <!-- نافذة الاسم المستعار -->
    <div id="nicknameModal" class="modal hidden">
        <div class="modal-content">
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="w-24 h-24 text-red-600 mx-auto mb-6 rounded-lg shadow-lg">
                <path d="M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z"></path>
            </svg>
            <h2 class="text-2xl font-bold mb-4 text-gray-800">اختر اسم مستعار</h2>
            <p class="text-gray-600 mb-6">يمكنك تغيير اسمك المستعار مرة واحدة فقط.</p>
            <input type="text" id="nicknameInput" placeholder="أدخل اسمك هنا" class="w-full p-3 border-2 border-gray-300 rounded-lg focus:outline-none focus:border-red-500 transition-colors">
            <button id="saveNicknameBtn" class="chat-button w-full mt-4 bg-red-500 text-white font-semibold py-3 px-6 rounded-lg hover:bg-red-600 transition-colors">
                ابدأ الدردشة
            </button>
        </div>
    </div>

    <!-- واجهة الدردشة الرئيسية -->
    <div id="chatApp" class="chat-container bg-white rounded-xl shadow-2xl overflow-hidden hidden" style="width: 100%; max-width: 600px; height: 95vh;">

        <!-- رأس الدردشة -->
        <div class="bg-red-500 text-white py-4 px-6 rounded-t-xl shadow-md flex justify-between items-center">
            <h1 class="text-xl font-bold">دردشة عامة</h1>
            <!-- زر كتم الصوت / تشغيل الموسيقى -->
            <button id="musicToggleBtn" class="p-2 rounded-full hover:bg-red-600 transition-colors">
                <svg id="musicOnIcon" xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                    <polygon points="11 5 6 9 2 9 2 15 6 15 11 19 11 5"></polygon>
                    <path d="M19.07 4.93a10 10 0 0 1 0 14.14M15.54 8.46a5 5 0 0 1 0 7.07"></path>
                </svg>
                <svg id="musicOffIcon" xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 hidden" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                    <polygon points="11 5 6 9 2 9 2 15 6 15 11 19 11 5"></polygon>
                    <line x1="22" y1="13" x2="16" y2="13"></line>
                    <line x1="22" y1="9" x2="16" y2="13"></line>
                </svg>
            </button>
        </div>

        <!-- منطقة الرسائل -->
        <div id="messagesContainer" class="messages-container">
            <!-- سيتم إضافة الرسائل هنا بواسطة JavaScript -->
        </div>

        <!-- منطقة إدخال الرسالة -->
        <div class="p-4 bg-gray-50 border-t-2 border-gray-200 flex items-center">
            <input type="text" id="messageInput" placeholder="اكتب رسالتك..." class="flex-grow p-3 rounded-full bg-white border-2 border-gray-300 focus:outline-none focus:border-red-500 transition-colors" />
            <button id="sendBtn" class="chat-button bg-red-500 text-white p-3 rounded-full ml-2 flex-shrink-0 hover:bg-red-600 transition-colors" style="width: 48px; height: 48px;">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 transform rotate-90" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
                    <path d="M12 19l9 2-9-18-9 18 9-2zm0 0v-8" />
                </svg>
            </button>
        </div>
    </div>

    <!-- رسالة مخصصة -->
    <div id="customNotification" class="fixed bottom-4 left-1/2 -translate-x-1/2 bg-gray-800 text-white px-4 py-2 rounded-lg shadow-lg z-50 hidden transition-opacity duration-300"></div>

    <script>
        // دالة لعرض رسالة مخصصة
        function showNotification(message) {
            const notification = document.getElementById('customNotification');
            notification.textContent = message;
            notification.classList.remove('hidden', 'opacity-0');
            notification.classList.add('opacity-100');
            setTimeout(() => {
                notification.classList.remove('opacity-100');
                notification.classList.add('opacity-0');
                setTimeout(() => {
                    notification.classList.add('hidden');
                }, 300);
            }, 3000);
        }

        document.addEventListener('DOMContentLoaded', () => {
            const loadingScreen = document.getElementById('loadingScreen');
            const passwordModal = document.getElementById('passwordModal');
            const nicknameModal = document.getElementById('nicknameModal');
            const chatApp = document.getElementById('chatApp');
            const passwordInput = document.getElementById('passwordInput');
            const accessChatBtn = document.getElementById('accessChatBtn');
            const nicknameInput = document.getElementById('nicknameInput');
            const saveNicknameBtn = document.getElementById('saveNicknameBtn');
            const messagesContainer = document.getElementById('messagesContainer');
            const messageInput = document.getElementById('messageInput');
            const sendBtn = document.getElementById('sendBtn');
            const loadingTextElement = document.getElementById('loadingText');
            
            // عناصر التحكم في الموسيقى
            const musicToggleBtn = document.getElementById('musicToggleBtn');
            const backgroundMusic = document.getElementById('background-music');
            const musicOnIcon = document.getElementById('musicOnIcon');
            const musicOffIcon = document.getElementById('musicOffIcon');

            let userNickname = null;
            let nicknameSet = false;
            
            // كلمة السر السرية، يمكنك تغييرها هنا
            const SECRET_PASSWORD = "1234";

            const loadingMessages = [
                "يتم تحميل الواجهة...",
                "جارٍ إعداد اتصال آمن...",
                "يتم جلب البيانات...",
                "جارٍ تجهيز مساحة الدردشة..."
            ];

            let messageIndex = 0;
            const messageInterval = 5000;
            
            // Function to update the loading text
            function updateLoadingText() {
                loadingTextElement.textContent = loadingMessages[messageIndex];
                messageIndex = (messageIndex + 1) % loadingMessages.length;
            }

            // Start the loading text rotation
            updateLoadingText();
            const intervalId = setInterval(updateLoadingText, messageInterval);

            // 1. Loading screen logic
            setTimeout(() => {
                clearInterval(intervalId);
                loadingScreen.style.opacity = '0';
                setTimeout(() => {
                    loadingScreen.classList.add('hidden');
                    passwordModal.classList.remove('hidden'); // Show password modal after loading
                }, 1000);
            }, 2000); // 2 seconds loading time

            // Function to add a message to the chat
            function addMessage(sender, message, isMyMessage = false) {
                const messageElement = document.createElement('div');
                messageElement.classList.add('message-bubble', 'mb-3', 'rounded-lg');
                
                if (isMyMessage) {
                    messageElement.classList.add('bg-red-500', 'text-white', 'ml-auto');
                } else {
                    messageElement.classList.add('bg-gray-200', 'text-gray-800');
                }
                
                messageElement.innerHTML = `
                    <div class="font-semibold text-sm mb-1">${sender}</div>
                    <p class="text-sm">${message}</p>
                `;
                messagesContainer.appendChild(messageElement);
                messagesContainer.scrollTop = messagesContainer.scrollHeight;
            }

            // Function to add automatic system messages
            function addSystemMessage(message) {
                const messageElement = document.createElement('div');
                messageElement.classList.add('text-center', 'text-gray-500', 'text-sm', 'my-4', 'italic');
                messageElement.textContent = message;
                messagesContainer.appendChild(messageElement);
                messagesContainer.scrollTop = messagesContainer.scrollHeight;
            }

            // Function to hide the password/nickname modals and show the chat app
            function showChatApp() {
                passwordModal.classList.add('hidden');
                nicknameModal.classList.add('hidden');
                chatApp.classList.remove('hidden');
                messageInput.focus();
                
                // تشغيل الموسيقى تلقائياً عند عرض التطبيق
                backgroundMusic.play().catch(e => console.error("فشل تشغيل الموسيقى التلقائي:", e));
            }

            // 2. Handle password entry
            accessChatBtn.addEventListener('click', () => {
                const enteredPassword = passwordInput.value.trim();
                if (enteredPassword === SECRET_PASSWORD) {
                    passwordModal.classList.add('hidden');
                    nicknameModal.classList.remove('hidden'); // Show nickname modal after correct password
                } else {
                    showNotification('كلمة السر خاطئة. حاول مرة أخرى.');
                }
            });

            // 3. Handle nickname submission
            saveNicknameBtn.addEventListener('click', () => {
                let nickname = nicknameInput.value.trim();
                if (nickname.length > 0) {
                    // Check if a nickname has already been set
                    if (!nicknameSet) {
                        localStorage.setItem('chatNickname', nickname);
                        userNickname = nickname;
                        nicknameSet = true;
                        showChatApp();
                    } else {
                        showNotification('لقد قمت بتعيين اسمك المستعار بالفعل.');
                    }
                } else {
                    showNotification('الرجاء إدخال اسم مستعار.');
                }
            });

            // 4. Handle message sending
            function sendMessage() {
                const message = messageInput.value.trim();
                if (message.length > 0) {
                    // This is a simulation of sending a message (no real server)
                    addMessage(userNickname, message, true);
                    
                    messageInput.value = '';
                }
            }

            sendBtn.addEventListener('click', sendMessage);

            messageInput.addEventListener('keypress', (e) => {
                if (e.key === 'Enter') {
                    sendMessage();
                }
            });

            // 5. التحكم في الموسيقى
            musicToggleBtn.addEventListener('click', () => {
                if (backgroundMusic.muted) {
                    backgroundMusic.muted = false;
                    musicOnIcon.classList.remove('hidden');
                    musicOffIcon.classList.add('hidden');
                    showNotification('تم تشغيل الموسيقى');
                } else {
                    backgroundMusic.muted = true;
                    musicOnIcon.classList.add('hidden');
                    musicOffIcon.classList.remove('hidden');
                    showNotification('تم كتم الموسيقى');
                }
            });
        });
    </script>
</body>
</html>